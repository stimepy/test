<?phpclass MAF{private static $topen=0;public static function createtable($state, $info=''){		if($state=="open"){		self::$topen++;		$tab ="<table ".$info."><!--T".self::$topen."-->";		return $tab;	}	else{		if(self::$topen>0){			$tab="</table><!--T".self::$topen."-->";			self::$topen--;			return $tab;		}		else{			echo self::$topen.' Tables have all been closed';		}	}}	/*#############################	Function: X1Clean	What does it do: Cleans away php, html, etc.	Needs: string $var: A string to be "cleaned." int $mode: The mode.  Mode 3 converts (,),' to html tags, should get rid of php code. Mode 4 no html tags, no quotes, just text, Mode 5 Array cleaning, Mode default remove all php and html tags and make (,),' into hmtl chartext equvalent	Returns: a string	###############################*/public static function X1Clean($var, $mode=1, $mode2=1){		switch($mode){				case 3://converts (,),' to html tags, should get rid of php code.				$var = utf8_decode($var);				$var = strtr($var, array('(' => '&#40;', ')' => '&#41;'));				$var = htmlspecialchars($var, ENT_QUOTES, "UTF-8");				$var = strip_tags($var);			break;						case 4:// no html tags, no quotes, just text				$var = utf8_decode($var);				$var = strip_tags($var);				$var = strtr($var, array('(' => '&#40;', ')' => '&#41;', '\'' =>'&#39;'));				$var = htmlspecialchars($var);				$var = rtrim($var);				break;							case 5: //Array cleaning				if(is_array($var)){					$keys=array_keys($var);					$count = 0;					foreach($var as $item){						$newvar[$keys[$count]]=self::X1Clean($item);						$count++;					}					$var=$newvar;				}				else{//really should be an error;					$var=self::X1Clean($var, $mode2);				}				break;							default://remove all php and html tags and make (,),' into hmtl chartext equvalent				$var = utf8_decode($var);//makes sure it's utf8 decoded.				$var = strip_tags($var); //strips out all HTML and PHP tags				//$var = strtr($var, array('(' => '&#40;', ')' => '&#41;')); //translates () into html equivalent				$var = htmlspecialchars($var, ENT_QUOTES | ENT_HTML5);//takes that equvalent and makes it text			break;		}		return $var;			}	}?>